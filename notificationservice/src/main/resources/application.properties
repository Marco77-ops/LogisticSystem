# Server configuration
server.port=8085
spring.application.name=notification-service

# Database configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/logistics
spring.datasource.username=logistics
spring.datasource.password=logistics
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Kafka configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.luckypets.logistics.shared.events

# Kafka retry configuration
spring.kafka.consumer.properties.reconnect.backoff.ms=1000
spring.kafka.consumer.properties.reconnect.backoff.max.ms=10000
spring.kafka.consumer.properties.retry.backoff.ms=1000
spring.kafka.consumer.properties.request.timeout.ms=30000
spring.kafka.consumer.properties.connections.max.idle.ms=600000
spring.kafka.listener.missing-topics-fatal=false

# Logging
logging.level.com.luckypets.logistics=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ANSI output
spring.output.ansi.enabled=ALWAYS

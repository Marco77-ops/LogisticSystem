server:
  port: 8085

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/notification
    username: notification
    password: notification_pw
    driver-class-name: org.postgresql.Driver
    jpa:
      hibernate:
        ddl-auto: update
      show-sql: true
      database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted-packages: "com.luckypets.logistics.shared.events"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted-packages: "com.luckypets.logistics.shared.events"

  output:
    ansi:
      enabled: ALWAYS

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/notification
    username: notification
    password: notification_pw
  kafka:
    bootstrap-servers: kafka:9092

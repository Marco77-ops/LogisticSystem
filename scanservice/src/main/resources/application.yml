server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/logistics
    username: logistics
    password: logistics
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: scan-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.luckypets.logistics.shared.events"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "com.luckypets.logistics.shared.events"

kafka:
  topic:
    created: shipment-created
    scanned: shipment-scanned

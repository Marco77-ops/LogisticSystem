server:
  port: 8085

spring:
  application:
    name: notification-view-service

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

    consumer:
      group-id: notification-view-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      enable-auto-commit: false
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "com.luckypets.logistics.shared.events,com.luckypets.logistics.notificationviewservice.model"
        spring.json.use.type.headers: false
        spring.json.ignore.type.precedence: true
        spring.json.value.default.type: java.lang.Object

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: true

    listener:
      ack-mode: manual_immediate

    topic:
      shipment-created: shipment-created
      shipment-scanned: shipment-scanned
      shipment-delivered: shipment-delivered
      notification-sent: notification-sent
  retry:
    enabled: true

# Retry configuration for event publishing

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.luckypets.logistics: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    # Enable debug logging for troubleshooting
    com.luckypets.logistics.notificationviewservice: DEBUG

---

spring:
  config:
    activate:
      on-profile: docker

  kafka:
    bootstrap-servers: kafka:9092

logging:
  level:
    root: INFO
    com.luckypets.logistics: DEBUG

---

spring:
  config:
    activate:
      on-profile: test

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}

logging:
  level:
    com.luckypets.logistics: DEBUG
    org.springframework.kafka: DEBUG
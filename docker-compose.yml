services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on: [ zookeeper ]
    ports: [ "9092:9092" ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR : 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR : 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 5s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports: ["8080:8080"]
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  shipmentservice:
    build:
      context: .
      dockerfile: shipmentservice/Dockerfile
    ports: ["8081:8081"]
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092


  scanservice:
    build:
      context: .
      dockerfile: scanservice/Dockerfile
    ports: ["8082:8082"]
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092


  deliveryservice:
    build:
      context: .
      dockerfile: deliveryservice/Dockerfile
    ports: ["8083:8083"]
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092


  analyticservice:
    build:
      context: .
      dockerfile: analyticservice/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    environment:
      KAFKA_TOPIC_DELIVERED: shipment-delivered
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  notificationviewservice:
    build:
      context: .
      dockerfile: notificationviewservice/Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  pgdata:
